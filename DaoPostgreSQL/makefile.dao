
project = DaoMake::Project( "DaoPostgresql" ) 

daovm  = DaoMake::FindPackage( "Dao",    $REQUIRED )
libpq  = DaoMake::FindPackage( "PostgreSQL",  $OPTIONAL )

daosql  = DaoMake::FindPackage( "DaoSQL",  $REQUIRED )

if( daovm == none or libpq == none ) return

if( DaoMake::IsPlatform( "IOS" ) ) return

project.UseImportLibrary( daovm, "dao" )
project.SetTargetPath( "../../../lib/dao/modules" )

project.AddIncludePath( ".." )
project.AddIncludePath( "../../../kernel" )

if( DaoMake::IsPlatform( "MACOSX" ) ) project.AddDefinition( "__BSD__" )

libpq_objs  = project.AddObjects( { "daoPostgreSQL.c" }, { "daoPostgreSQL.h" } )
libpq_objs.UseProject( libpq )
libpq_dll  = project.AddSharedLibrary( "dao_postgresql", libpq_objs )
libpq_lib  = project.AddStaticLibrary( "dao_postgresql", libpq_objs )
libpq_dll.UseSharedLibrary( daosql, "dao_sql" )
libpq_dll.UseSharedLibrary( libpq )
libpq_lib.UseSharedLibrary( libpq )

project.Install( DaoMake::Variables[ "INSTALL_MOD" ], libpq_dll );
project.Install( DaoMake::Variables[ "INSTALL_MOD" ], libpq_lib );

findpkg = project.GenerateFinder( $TRUE );
project.Install( DaoMake::Variables[ "INSTALL_FINDER" ], findpkg );

