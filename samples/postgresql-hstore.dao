
load postgresql

class Product
{
	var id   : INTEGER_PRIMARY_KEY_AUTO_INCREMENT;
	var name : VARCHAR128;
	var attributes : HSTORE;
}

db = SQLDatabase<PostgreSQL>( "test_db", "localhost", "min" );

std.exec {
	defer(any){ return none }
	db.Query( "CREATE EXTENSION hstore;" );
}

std.exec {
	defer(any){ return none }
	db.Query( "DROP TABLE Product;" );
}

product = Product.{
	0,
	"Geek Love: A Novel",
	{
		"author" -> "Katherine Dunn",
		"pages"   -> "168",
		"publisher" -> "unknown",
		"category" -> "fiction"
	}
};

std.exec {
	defer(any){ return none }
	db.CreateTable( Product );
	db.Insert( product );
	product.attributes["author"] = "Someone Someone"
	product.attributes["pages"] = "268"
	db.Insert( product );
	product.attributes["author"] = "Someone Someone"
	product.attributes["pages"] = "368"
	db.Insert( product );
}

#db.Update( Product ).Add( "attributes", "pages", int, 100 ).QueryOnce();

h = db.Select( product ).Where()
	.HStoreContain( "attributes", { "category" -> "fiction" } )
	.HStoreLT( Product, "attributes", "pages", int, 300 )
	.HStoreSort( Product, "attributes", "pages", int, 1 )

io.writeln( std.about(h) )

# query and store the result into "product" object:
h.Query( product ){
	io.writeln( product.id, product.name, product.attributes );
	return $continue;
}
