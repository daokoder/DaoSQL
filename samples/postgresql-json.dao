
load libDaoPostgreSQL

class Event
{
	var  name        : VARCHAR200;
	var  visitor_id  : VARCHAR200;
	var  properties  : JSON;
	var  browser     : JSON;
}


db = SQLDatabase<PostgreSQL>( 'test_db', 'localhost', 'min' );

frame {
	defer{ recover() }
	db.Query( 'CREATE EXTENSION json;' );
}

event1 = Event::{
	'pageview', '1',
	( page => "/" , #{ extra comma for single-item tuple #} ),
	( name => "Chrome", os => "Mac", resolution => (x => 1440, y => 900) )
}
event2 = Event::{
	'pageview', '2',
	( page => "/", ),
	( name => "Firefox", os => "Windows", resolution => (x => 1920, y => 1200) )
}
event3 = Event::{
	'pageview', '1',
	( page => "/account", ),
	( name => "Chrome", os => "Mac", resolution => (x => 1280, y => 800) )
}
event4 = Event::{
	'purchase', '5',
	( amount => 10, ),
	( name => "Firefox", os => "Windows", resolution => (x => 1024, y => 768) )
}
event5 = Event::{
	'purchase', '15',
	( amount => 200, ),
	( name => "Firefox", os => "Windows", resolution => (x => 1280, y => 800) )
}
event6 = Event::{
	'purchase', '15',
	( amount => 500, ),
	( name => "Firefox", os => "Windows", resolution => (x => 1280, y => 800) )
}

frame {
	defer{ recover() }
	db.Query( 'DROP TABLE Event;' );
}


frame {
	defer{ recover() }
	db.CreateTable( Event );
	db.Insert( event1, event2, event3, event4, event5, event6 );
}

h = db.Select( event1 ).Where()
	.EQ( 'name', 'pageview' )
	.JsonEQ( Event, 'browser', {'name'}, 'Chrome' )
	.JsonSort( Event, 'browser', {'resolution','x'}, int )

h.Query( event1 ){
	io.writeln( event1.name, event1.visitor_id, event1.properties, event1.browser );
	return $continue;
}


