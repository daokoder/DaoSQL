
project = DaoMake::Project( "DaoSQL" ) 

daovm  = DaoMake::FindPackage( "Dao",    $REQUIRED )
sqlite = DaoMake::FindPackage( "SQLite", $OPTIONAL )
mysql  = DaoMake::FindPackage( "MySQL",  $OPTIONAL )
libpq  = DaoMake::FindPackage( "PostgreSQL",  $OPTIONAL )

if( daovm == none ) return

if( DaoMake::IsPlatform( "IOS" ) ){
	mysql = none
	libpq = none
}

project.UseImportLibrary( daovm, "dao" )
project.SetTargetPath( "../../lib/dao/modules" )

project.AddIncludePath( "." )
project.AddIncludePath( "../../kernel" )

if( DaoMake::IsPlatform( "MACOSX" ) ) project.AddDefinition( "__BSD__" )

daosql_objs = project.AddObjects( { "daoSQL.c" }, { "daoSQL.h" } )
daosql_dll = project.AddSharedLibrary( "dao_sql", daosql_objs )
daosql_lib = project.AddStaticLibrary( "dao_sql", daosql_objs )

project.Install( DaoMake::Variables[ "INSTALL_MOD" ], daosql_dll );
project.Install( DaoMake::Variables[ "INSTALL_MOD" ], daosql_lib );


project.AddDirectory( "DaoSQLite", "DaoSQLite" );
project.AddDirectory( "DaoPostgreSQL", "DaoPostgreSQL" );
project.AddDirectory( "DaoMySQL", "DaoMySQL" );

project.GenerateFinder( $TRUE );
findpkg = DaoMake::MakePath( project.BinaryPath(), "FindDaoSQL.dao" );
project.Install( DaoMake::Variables[ "INSTALL_FINDER" ], findpkg );

